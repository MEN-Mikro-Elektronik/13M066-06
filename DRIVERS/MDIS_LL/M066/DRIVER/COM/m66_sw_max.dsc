#************************** MDIS4 device descriptor *************************
#
# m66_sw_max.dsc: Descriptor for M66
# Automatically generated by mdiswiz 0.97a.003-linux-1 from 13m06606.xml
# 2004-08-30
#
#****************************************************************************

M66_SW_1 {

    # ------------------------------------------------------------------------
    #        general parameters (don't modify)
    # ------------------------------------------------------------------------
    DESC_TYPE = U_INT32 0x1
    HW_TYPE = STRING M66_sw

    # ------------------------------------------------------------------------
    #        reference to base board
    # ------------------------------------------------------------------------
    BOARD_NAME = STRING A12_1
    DEVICE_SLOT = U_INT32 0x0

    # ------------------------------------------------------------------------
    #        device parameters
    # ------------------------------------------------------------------------

    # Define wether M-Module ID-PROM is checked
    # 0 := disable -- ignore IDPROM
    # 1 := enable
    ID_CHECK = U_INT32 1
    RD_BUF {

        # read buffer mode
        # 0 := USER controlled buffer
        # 1 := MDIS controlled current buffer
        # 2 := MDIS controlled ring buffer
        # 3 := MDIS controlled ring buffer overwrite
        MODE = U_INT32 0

        # read buffer size in bytes
        SIZE = U_INT32 512

        # read buffer timeout in ms
        TIMEOUT = U_INT32 1000

        # read buffer high water mark
        HIGHWATER = U_INT32 512
    }
    CHANNEL_0 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_1 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_2 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_3 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_4 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_5 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_6 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_7 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_8 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_9 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_10 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_11 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_12 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_13 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_14 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_15 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_16 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_17 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_18 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_19 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_20 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_21 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_22 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_23 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_24 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_25 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_26 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_27 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_28 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_29 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_30 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }
    CHANNEL_31 {

        # channel interrupt mode
        # 0 := none
        # 1 := rising edge
        # 2 := falling edge
        # 3 := any edge
        IRQ_ENABLE = U_INT32 0
    }

    # ------------------------------------------------------------------------
    #        debug levels (optional)
    #        this keys have only effect on debug drivers
    # ------------------------------------------------------------------------
    DEBUG_LEVEL = U_INT32 0xc0008000
    DEBUG_LEVEL_MK = U_INT32 0xc0008000
    DEBUG_LEVEL_OSS = U_INT32 0xc0008000
    DEBUG_LEVEL_DESC = U_INT32 0xc0008000
    DEBUG_LEVEL_MBUF = U_INT32 0xc0008000
}
# EOF
